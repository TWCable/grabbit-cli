buildscript {
    repositories {
        maven {
            url "http://dl.bintray.com/jmoore/java-lib"
        }
    }
    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath 'com.mooregreatsoftware:gradle-defaults:1.0.6'
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.4'
    id "us.kirchmeier.capsule" version "1.0.2"
}

group = 'com.twcable.grabbit'
description = 'Command line interface for interacting with the Grabbit Client'

apply plugin: 'groovy'

//noinspection GroovyAssignabilityCheck
configurations {
    //noinspection GroovyAssignabilityCheck
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifiers inserted'
    }
    //noinspection GroovyAssignabilityCheck
    checkerFramework {
        description = 'The Checker Framework: custom plugable types for Java'
    }
}

def checkerFrameworkVersion = '2.0.1'

//noinspection GroovyAssignabilityCheck
dependencies {
    checkerFrameworkAnnotatedJDK "org.checkerframework:jdk8:${checkerFrameworkVersion}"

    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
}

//noinspection GroovyAssignabilityCheck
dependencies {
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'org.yaml:snakeyaml:1.17'

    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"

    testCompile "org.codehaus.groovy:groovy-all:2.4.6"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4", {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

// the Checker classes are only needed for compiling: there's no runtime dependency
configurations.runtime.exclude group: 'org.checkerframework'

apply plugin: 'com.mooregreatsoftware.defaults'

defaultTasks 'build'

defaults {
    compatibilityVersion = '1.8'

    id = 'twcable'

    orgName = 'Time Warner Cable'
    orgUrl = 'http://www.timewarnercable.com'

    bintrayRepo = 'aem'
    bintrayLabels = ['grabbit', 'aem']

    developers = [
        [id: 'jmoore', name: 'Jim Moore', email: 'moore.jim@gmail.com'],
    ]

    copyrightYears = '2014-2016'
}

/*
 * Hack around a bug in JAVAC prior to u45, causing a conflict with Checker Framework
 */
def compilerArgs = [
    '-processor', 'org.checkerframework.checker.nullness.NullnessChecker,org.checkerframework.checker.regex.RegexChecker',
    '-processorpath', "${configurations.checkerFramework.asPath}",
    // comment to turn Checker Framework warnings into errors
    '-Awarns',
    "-AskipUses=javaslang",
    "-Alint=-cast:unsafe",
    "-Xlint:unchecked",
    "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
]
def javaVer = System.getProperty("java.version")
logger.info "Java Version: ${javaVer}"
def matcher = javaVer =~ /.*_(\d+)$/
if (matcher.matches()) {
    def updateVer = Integer.parseInt(matcher.group(1))
    if (updateVer < 45) {
        logger.warn "Full type checking is broken in JDK-8 versions prior to update 45. You are currently running ${updateVer}. Please upgrade."
        compilerArgs.remove(0) // remove the "-processor"
        compilerArgs.remove(0) // remove the -processor arg
    }
}
else {
    logger.warn "Could not determine the update version for Java: ${javaVer}"
}

tasks.withType(JavaCompile).all { JavaCompile compile ->
    compile.options.compilerArgs = compilerArgs
}

task fatCapsule(type: FatCapsule) {
    archiveName = "grabbit-cli-${version}"

    applicationClass "com.twcable.grabbit.cli.GrabbitCli"

    capsuleManifest {
        minJavaVersion = defaults.compatibilityVersion
    }

    manifest = jar.manifest

    reallyExecutable
}

assemble.dependsOn fatCapsule


bintray {
    filesSpec {
        from fatCapsule.archivePath
        into '/bin'
    }

    pkg {
        licenses = ['Apache-2.0']
        attributes = ['plat': ['jvm', 'aem', 'grabbit', 'cq']]
    }
}


idea.project.ipr {
    withXml { provider ->
        def annotationProcessing = provider.node.component
            .find { it.@name == 'CompilerConfiguration' }
            .annotationProcessing

        def profile = new NodeBuilder().profile(default: false, name: "CheckerFramework", enabled: true) {
            option(name: "warns", value: "true")
            // option(name: "skipUses", value: "javaslang")
            option(name: "lint", value: "-cast:unsafe")
            // TODO consolidate with Gradle javac configuration
            processor(name: "org.checkerframework.checker.nullness.NullnessChecker")
//            processor(name: "org.checkerframework.checker.regex.RegexChecker")

            processorPath(useClasspath: false) {
                configurations.checkerFramework.files.each { file ->
                    entry(name: file.toString())
                }
            }

            // TODO generate this list
            module(name: "grabbit-cli")
        }

        annotationProcessing[0].append profile

        def javacSettings = new NodeBuilder().component(name: "JavacSettings") {
            configurations.checkerFrameworkAnnotatedJDK.files.each { file ->
                option(name: "ADDITIONAL_OPTIONS_STRING", value: "-Xbootclasspath/p:${file.toString()}")
            }
        }

        provider.node.append javacSettings
    }
}

//noinspection GroovyAssignabilityCheck
wrapper {
    gradleVersion = 2.13
}
